var _gaq = _gaq || {};
gadgets.pubsubrouter.init(function (a) { return my.gadgets[shindig.container.gadgetService.getGadgetIdFromModuleId(a)].url }, { onSubscribe: function (a, b) { setTimeout("my.callORNGResponder('" + b + "')", 3E3); return !1 }, onUnsubscribe: function (a, b) { return !1 }, onPublish: function (a, b, c) {
    if (".." != a) var d = shindig.container.gadgetService.getGadgetIdFromModuleId(a); if ("status" == b) { if (a = document.getElementById(a + "_status")) b = c.split(":"), 2 == b.length ? (a.style.color = b[0], a.innerHTML = b[1]) : a.innerHTML = c } else "analytics" == b ?
c.hasOwnProperty("value") ? _gaq.push(["_trackEvent", my.gadgets[d].label, c.action, c.label, c.value]) : c.hasOwnProperty("label") ? _gaq.push(["_trackEvent", my.gadgets[d].label, c.action, c.label]) : _gaq.push(["_trackEvent", my.gadgets[d].label, c.action]) : "profile" == b ? (_gaq.push(["_trackEvent", my.gadgets[d].label, "go_to_profile", c]), document.location.href = "/" + location.pathname.split("/")[1] + "/display/n" + c) : "JSONPersonIds" != b && ("hide" == b ? document.getElementById(a).parentNode.parentNode.style.display = "none" : alert(a +
" publishes '" + c + "' to channel '" + b + "'")); return !1
} 
}); my.findGadgetsAttachingTo = function (a) { for (var b = [], c = 0; c < my.gadgets.length; c++) my.gadgets[c].chrome_id == a && (b[b.length] = my.gadgets[c]); return b }; my.removeGadgets = function (a) { for (var b = 0; b < a.length; b++) for (var c = 0; c < my.gadgets.length; c++) if (a[b].url == my.gadgets[c].url) { my.gadgets.splice(c, 1); break } };
my.callORNGResponder = function (a) { var b = { CONTENT_TYPE: "JSON", METHOD: "POST", POST_DATA: gadgets.json.stringify({ guid: my.guid, request: a }) }; gadgets.io.makeNonProxiedRequest(_rootDomain + "/ORNG/Default.aspx/CallORNGResponder", function (b) { gadgets.pubsubrouter.publish(a, b.data.d) }, b, "application/json") }; my.removeParameterFromURL = function (a, b) { var c = a.split("?"); if (2 <= c.length) { for (var d = encodeURIComponent(b) + "=", e = c[1].split(/[&;]/g), f = e.length; 0 < f--; )-1 !== e[f].lastIndexOf(d, 0) && e.splice(f, 1); a = c[0] + "?" + e.join("&") } return a };
my.CallSuccess = function (a) { gadgets.pubsubrouter.publish("person", a) }; my.CallFailed = function (a) { alert(a.get_message()) };
my.requestGadgetMetaData = function (a, b) { for (var c = { context: { country: "default", language: "default", view: a, ignoreCache: my.noCache, container: "default" }, gadgets: [] }, d = 0; d < my.gadgets.length; d++) my.gadgets[d].view == a && (c.gadgets[c.gadgets.length] = { url: my.gadgets[d].url, moduleId: d }); c = { CONTENT_TYPE: "JSON", METHOD: "POST", POST_DATA: gadgets.json.stringify(c) }; gadgets.io.makeNonProxiedRequest(my.openSocialURL + "/gadgets/metadata", function (a) { a = a.data; b && b(a) }, c, "application/javascript") }; my.renderableGadgets = [];
my.generateGadgets = function (a) {
    for (var b = 0; b < a.gadgets.length; b++) {
        var c = a.gadgets[b].moduleId, d = a.gadgets[b].height, e = a.gadgets[b].width; if (a.gadgets[b].views) { var f = a.gadgets[b].views[my.gadgets[c].view]; f && (d = f.preferredHeight || d, e = f.preferredWidth || e) } var d = { specUrl: a.gadgets[b].url, secureToken: my.gadgets[c].secureToken, title: a.gadgets[b].title, userPrefs: a.gadgets[b].userPrefs, height: d, width: e, debug: my.debug }, g; for (g in my.gadgets[c].opt_params) d[g] = my.gadgets[c].opt_params[g]; my.renderableGadgets[c] =
shindig.container.createGadget(d); my.renderableGadgets[c].setMetadata(a.gadgets[b])
    } a = my.renderableGadgets.length == my.gadgets.length; for (b = 0; a && b < my.renderableGadgets.length; b++) my.renderableGadgets[b] || (a = !1); a && (shindig.container.addGadgets(my.renderableGadgets), shindig.container.renderGadgets())
};
my.init = function () { shindig.container = new ORNGContainer; shindig.container.gadgetService = new ORNGGadgetService; shindig.container.layoutManager = new ORNGLayoutManager; shindig.container.setNoCache(my.noCache); shindig.container.setView("REPLACE_THIS_VIEW"); for (var a = {}, b = 0; b < my.gadgets.length; b++) { var c = my.gadgets[b].view; a[c] || (a[c] = c, my.requestGadgetMetaData(c, my.generateGadgets)) } "function" != typeof _gaq.push && (_gaq.push = function (a) { }) }; ORNGContainer = function () { shindig.IfrContainer.call(this) }; ORNGContainer.inherits(shindig.IfrContainer);
ORNGContainer.prototype.createGadget = function (a) { return a.gadget_class ? new window[a.gadget_class](a) : new ORNGGadget(a) }; ORNGLayoutManager = function () { shindig.LayoutManager.call(this) }; ORNGLayoutManager.inherits(shindig.LayoutManager); ORNGLayoutManager.prototype.getGadgetChrome = function (a) { if (a = document.getElementById(my.gadgets[a.id].chrome_id)) { var b = document.createElement("div"); b.className = "gadgets-gadget-chrome"; a.appendChild(b); return b } return null }; ORNGGadgetService = function () { shindig.IfrGadgetService.call(this) };
ORNGGadgetService.inherits(shindig.IfrGadgetService); ORNGGadgetService.prototype.setTitle = function (a) { var b = shindig.container.gadgetService.getGadgetIdFromModuleId(this.f); if ("canvas" == my.gadgets[b].view) ORNGGadgetService.setCanvasTitle(a); else { var c = document.getElementById(this.f + "_title"); c && (c.innerHTML = my.renderableGadgets[b].getTitleHtml(a)) } }; ORNGGadgetService.setCanvasTitle = function (a) { document.getElementById("gadgets-title").innerHTML = a.replace(/&/g, "&amp;").replace(/</g, "&lt;") };
ORNGGadgetService.prototype.requestNavigateTo = function (a, b) {
    var c = gadgets.config.get("views")[a].urlTemplate, d; d = (c || "OpenSocial.aspx?") + window.location.search.substring(1); d = my.removeParameterFromURL(d, "appId"); 0 == c.indexOf("ORNG") && (c = shindig.container.gadgetService.getGadgetIdFromModuleId(this.f), d += "&appId=" + my.gadgets[c].appId); b && (c = gadgets.json.stringify(b), 0 < c.length && (d += "&appParams=" + encodeURIComponent(c))); d && -1 == document.location.href.indexOf(d) && (document.location.href = _rootDomain + "/" +
d)
}; ORNGGadget = function (a) { shindig.Gadget.call(this, a); this.serverBase_ = my.openSocialURL + "/gadgets/"; this.queryIfrGadgetType_(); this.debug = my.debug; a = shindig.IfrGadget; this.metadata = {}; for (var b in a) a.hasOwnProperty(b) && ("getIframeUrl" == b ? this.originalGetIframeUrl = a[b] : "finishRender" != b && (this[b] = a[b])) }; ORNGGadget.inherits(shindig.BaseIfrGadget); ORNGGadget.prototype.setMetadata = function (a) { this.metadata = a };
ORNGGadget.prototype.hasFeature = function (a) { for (var b = 0; b < this.metadata.features.length; b++) if (this.metadata.features[b] == a) return !0; return !1 }; ORNGGadget.prototype.getAdditionalParams = function () { var a = "", b; for (b in my.gadgets[this.id].additionalParams) a += "&" + b + "=" + my.gadgets[this.id].additionalParams[b]; return a }; ORNGGadget.prototype.getIframeUrl = function () { return this.originalGetIframeUrl().replace("REPLACE_THIS_VIEW", my.gadgets[this.id].view) };
ORNGGadget.prototype.getTitleHtml = function (a) { return a ? a.replace(/&/g, "&amp;").replace(/</g, "&lt;") : "Gagdget" }; ORNGGadget.prototype.getTitleBarContent = function (a) { "canvas" == my.gadgets[this.id].view ? (ORNGGadgetService.setCanvasTitle(this.title), a('<span class="gadgets-gadget-canvas-title"></span>')) : a() }; ORNGGadget.prototype.finishRender = function (a) { window.frames[this.getIframeId()].location = this.getIframeUrl(); a && this.width && (a.style.width = this.width + "px") };
ORNGTitleBarGadget = function (a) { ORNGGadget.call(this, a) }; ORNGTitleBarGadget.inherits(ORNGGadget); ORNGTitleBarGadget.prototype.getTitleHtml = function (a) { return a ? a.replace(/&/g, "&amp;").replace(/</g, "&lt;") : "Gagdget" };
ORNGTitleBarGadget.prototype.getTitleBarContent = function (a) { "canvas" == my.gadgets[this.id].view ? (ORNGGadgetService.setCanvasTitle(this.title), a('<span class="gadgets-gadget-canvas-title"></span>')) : a('<div id="' + this.cssClassTitleBar + "-" + this.id + '" class="' + this.cssClassTitleBar + '"><span class="' + this.cssClassTitleButtonBar + '"></span> <span id="' + this.getIframeId() + '_title" class="' + this.cssClassTitle + '">' + this.getTitleHtml(this.title) + '</span><span id="' + this.getIframeId() + '_status" class="gadgets-gadget-status"></span></div>') };